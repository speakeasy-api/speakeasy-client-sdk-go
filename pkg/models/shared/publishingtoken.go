// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

// PublishingToken - A token used to publish to a target
type PublishingToken struct {
	CreatedAt      time.Time  `json:"created_at"`
	CreatedBy      *string    `json:"created_by,omitempty"`
	ID             string     `json:"id"`
	TargetID       string     `json:"target_id"`
	TargetResource string     `json:"target_resource"`
	Token          string     `json:"token"`
	UpdatedAt      *time.Time `json:"updated_at,omitempty"`
	UpdatedBy      *string    `json:"updated_by,omitempty"`
	ValidUntil     *time.Time `json:"valid_until,omitempty"`
}

func (p PublishingToken) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PublishingToken) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PublishingToken) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PublishingToken) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *PublishingToken) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PublishingToken) GetTargetID() string {
	if o == nil {
		return ""
	}
	return o.TargetID
}

func (o *PublishingToken) GetTargetResource() string {
	if o == nil {
		return ""
	}
	return o.TargetResource
}

func (o *PublishingToken) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *PublishingToken) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *PublishingToken) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *PublishingToken) GetValidUntil() *time.Time {
	if o == nil {
		return nil
	}
	return o.ValidUntil
}
