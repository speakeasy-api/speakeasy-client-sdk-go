// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InteractionType - Type of interaction.
type InteractionType string

const (
	InteractionTypeCiExec         InteractionType = "CI_EXEC"
	InteractionTypeCliExec        InteractionType = "CLI_EXEC"
	InteractionTypeTargetGenerate InteractionType = "TARGET_GENERATE"
	InteractionTypeTombstone      InteractionType = "TOMBSTONE"
	InteractionTypeAuthenticate   InteractionType = "AUTHENTICATE"
	InteractionTypeQuickstart     InteractionType = "QUICKSTART"
	InteractionTypeRun            InteractionType = "RUN"
	InteractionTypeConfigure      InteractionType = "CONFIGURE"
	InteractionTypePublish        InteractionType = "PUBLISH"
)

func (e InteractionType) ToPointer() *InteractionType {
	return &e
}

func (e *InteractionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CI_EXEC":
		fallthrough
	case "CLI_EXEC":
		fallthrough
	case "TARGET_GENERATE":
		fallthrough
	case "TOMBSTONE":
		fallthrough
	case "AUTHENTICATE":
		fallthrough
	case "QUICKSTART":
		fallthrough
	case "RUN":
		fallthrough
	case "CONFIGURE":
		fallthrough
	case "PUBLISH":
		*e = InteractionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InteractionType: %v", v)
	}
}
