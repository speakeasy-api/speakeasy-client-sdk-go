// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DepthStyle string

const (
	DepthStyleOriginal DepthStyle = "original"
	DepthStyleFlat     DepthStyle = "flat"
	DepthStyleNested   DepthStyle = "nested"
	DepthStyleDeep     DepthStyle = "deep"
)

func (e DepthStyle) ToPointer() *DepthStyle {
	return &e
}
func (e *DepthStyle) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "original":
		fallthrough
	case "flat":
		fallthrough
	case "nested":
		fallthrough
	case "deep":
		*e = DepthStyle(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DepthStyle: %v", v)
	}
}

type Style string

const (
	StyleStandardize Style = "standardize"
	StyleResource    Style = "resource"
)

func (e Style) ToPointer() *Style {
	return &e
}
func (e *Style) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "standardize":
		fallthrough
	case "resource":
		*e = Style(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Style: %v", v)
	}
}

type SuggestOperationIDsOpts struct {
	DepthStyle *DepthStyle `json:"depth_style,omitempty"`
	Style      *Style      `json:"style,omitempty"`
}

func (o *SuggestOperationIDsOpts) GetDepthStyle() *DepthStyle {
	if o == nil {
		return nil
	}
	return o.DepthStyle
}

func (o *SuggestOperationIDsOpts) GetStyle() *Style {
	if o == nil {
		return nil
	}
	return o.Style
}
