// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AccountType string

const (
	AccountTypeFree       AccountType = "free"
	AccountTypeScaleUp    AccountType = "scale-up"
	AccountTypeEnterprise AccountType = "enterprise"
)

func (e AccountType) ToPointer() *AccountType {
	return &e
}

func (e *AccountType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "free":
		fallthrough
	case "scale-up":
		fallthrough
	case "enterprise":
		*e = AccountType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountType: %v", v)
	}
}

type FeatureFlags string

const (
	FeatureFlagsChangesReport      FeatureFlags = "changes_report"
	FeatureFlagsSchemaRegistry     FeatureFlags = "schema_registry"
	FeatureFlagsSkipSchemaRegistry FeatureFlags = "skip_schema_registry"
)

func (e FeatureFlags) ToPointer() *FeatureFlags {
	return &e
}

func (e *FeatureFlags) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "changes_report":
		fallthrough
	case "schema_registry":
		fallthrough
	case "skip_schema_registry":
		*e = FeatureFlags(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureFlags: %v", v)
	}
}

type APIKeyDetails struct {
	AccountType               AccountType    `json:"account_type"`
	FeatureFlags              []FeatureFlags `json:"feature_flags"`
	GenerationAccessUnlimited *bool          `json:"generation_access_unlimited,omitempty"`
	OrgSlug                   string         `json:"org_slug"`
	WorkspaceID               string         `json:"workspace_id"`
	WorkspaceSlug             string         `json:"workspace_slug"`
}

func (o *APIKeyDetails) GetAccountType() AccountType {
	if o == nil {
		return AccountType("")
	}
	return o.AccountType
}

func (o *APIKeyDetails) GetFeatureFlags() []FeatureFlags {
	if o == nil {
		return []FeatureFlags{}
	}
	return o.FeatureFlags
}

func (o *APIKeyDetails) GetGenerationAccessUnlimited() *bool {
	if o == nil {
		return nil
	}
	return o.GenerationAccessUnlimited
}

func (o *APIKeyDetails) GetOrgSlug() string {
	if o == nil {
		return ""
	}
	return o.OrgSlug
}

func (o *APIKeyDetails) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

func (o *APIKeyDetails) GetWorkspaceSlug() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceSlug
}
