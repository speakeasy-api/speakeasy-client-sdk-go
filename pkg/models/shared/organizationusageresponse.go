// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

// OrganizationUsageResponse - A billing summary of organization usage
type OrganizationUsageResponse struct {
	// List of allowed languages
	AllowedLanguages []string `json:"allowed_languages"`
	// Expiry date of the free trial, will be null if no trial
	FreeTrialExpiry *time.Time `json:"free_trial_expiry,omitempty"`
	// Total number of allowed languages, -1 if unlimited
	TotalAllowedLanguages int64               `json:"total_allowed_languages"`
	Usage                 []OrganizationUsage `json:"usage"`
}

func (o OrganizationUsageResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrganizationUsageResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrganizationUsageResponse) GetAllowedLanguages() []string {
	if o == nil {
		return []string{}
	}
	return o.AllowedLanguages
}

func (o *OrganizationUsageResponse) GetFreeTrialExpiry() *time.Time {
	if o == nil {
		return nil
	}
	return o.FreeTrialExpiry
}

func (o *OrganizationUsageResponse) GetTotalAllowedLanguages() int64 {
	if o == nil {
		return 0
	}
	return o.TotalAllowedLanguages
}

func (o *OrganizationUsageResponse) GetUsage() []OrganizationUsage {
	if o == nil {
		return []OrganizationUsage{}
	}
	return o.Usage
}
