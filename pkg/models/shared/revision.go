// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

type Revision struct {
	ContentsMetadata *RevisionContentsMetadata `json:"contents_metadata,omitempty"`
	CreatedAt        time.Time                 `json:"created_at"`
	Digest           string                    `json:"digest"`
	// Format {namespace_id}/{revision_digest}
	ID            string    `json:"id"`
	NamespaceName string    `json:"namespace_name"`
	Tags          []string  `json:"tags"`
	UpdatedAt     time.Time `json:"updated_at"`
}

func (r Revision) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *Revision) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Revision) GetContentsMetadata() *RevisionContentsMetadata {
	if o == nil {
		return nil
	}
	return o.ContentsMetadata
}

func (o *Revision) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Revision) GetDigest() string {
	if o == nil {
		return ""
	}
	return o.Digest
}

func (o *Revision) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Revision) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *Revision) GetTags() []string {
	if o == nil {
		return []string{}
	}
	return o.Tags
}

func (o *Revision) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
