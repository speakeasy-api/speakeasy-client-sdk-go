// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

type Revision struct {
	CreatedAt time.Time `json:"created_at"`
	// aka digest
	ID          string    `json:"id"`
	NamespaceID string    `json:"namespace_id"`
	Tags        []string  `json:"tags"`
	UpdatedAt   time.Time `json:"updated_at"`
}

func (r Revision) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *Revision) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Revision) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Revision) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Revision) GetNamespaceID() string {
	if o == nil {
		return ""
	}
	return o.NamespaceID
}

func (o *Revision) GetTags() []string {
	if o == nil {
		return []string{}
	}
	return o.Tags
}

func (o *Revision) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
