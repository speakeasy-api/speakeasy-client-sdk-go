// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

// Subscription - A subscription
type Subscription struct {
	CreatedAt            time.Time        `json:"created_at"`
	DeletedAt            *time.Time       `json:"deleted_at,omitempty"`
	EventType            EventType        `json:"event_type"`
	ID                   string           `json:"id"`
	NamespaceName        string           `json:"namespace_name"`
	SubscriptionSettings string           `json:"subscription_settings"`
	SubscriptionType     SubscriptionType `json:"subscription_type"`
	Tags                 []string         `json:"tags,omitempty"`
	UpdatedAt            time.Time        `json:"updated_at"`
	WorkspaceID          string           `json:"workspace_id"`
}

func (s Subscription) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Subscription) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Subscription) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Subscription) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *Subscription) GetEventType() EventType {
	if o == nil {
		return EventType("")
	}
	return o.EventType
}

func (o *Subscription) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Subscription) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *Subscription) GetSubscriptionSettings() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionSettings
}

func (o *Subscription) GetSubscriptionType() SubscriptionType {
	if o == nil {
		return SubscriptionType("")
	}
	return o.SubscriptionType
}

func (o *Subscription) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *Subscription) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *Subscription) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
