// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v2/pkg/utils"
	"time"
)

// Plugin - A plugin is a short script that is run against ingested requests
type Plugin struct {
	Code        string     `json:"code"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	EvalHash    *string    `json:"eval_hash,omitempty"`
	PluginID    string     `json:"plugin_id"`
	Title       string     `json:"title"`
	UpdatedAt   *time.Time `json:"updated_at,omitempty"`
	WorkspaceID string     `json:"workspace_id"`
}

func (p Plugin) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *Plugin) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Plugin) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *Plugin) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Plugin) GetEvalHash() *string {
	if o == nil {
		return nil
	}
	return o.EvalHash
}

func (o *Plugin) GetPluginID() string {
	if o == nil {
		return ""
	}
	return o.PluginID
}

func (o *Plugin) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *Plugin) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Plugin) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
