// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

// WorkspaceToken - A workspace token
type WorkspaceToken struct {
	Alg         string     `json:"alg"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *string    `json:"created_by,omitempty"`
	Email       *string    `json:"email,omitempty"`
	ID          string     `json:"id"`
	Key         string     `json:"key"`
	LastUsed    *time.Time `json:"last_used,omitempty"`
	Name        string     `json:"name"`
	WorkspaceID string     `json:"workspace_id"`
}

func (w WorkspaceToken) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkspaceToken) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkspaceToken) GetAlg() string {
	if o == nil {
		return ""
	}
	return o.Alg
}

func (o *WorkspaceToken) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *WorkspaceToken) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *WorkspaceToken) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *WorkspaceToken) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WorkspaceToken) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *WorkspaceToken) GetLastUsed() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUsed
}

func (o *WorkspaceToken) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *WorkspaceToken) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
