// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"time"
)

// Namespace - A namespace contains many revisions.
type Namespace struct {
	CreatedAt time.Time `json:"created_at"`
	// A human readable name for the namespace.
	ID        string    `json:"id"`
	UpdatedAt time.Time `json:"updated_at"`
}

func (n Namespace) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *Namespace) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Namespace) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Namespace) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Namespace) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
