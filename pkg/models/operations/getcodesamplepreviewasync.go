// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"io"
	"net/http"
)

type GetCodeSamplePreviewAsyncRequest struct {
	// The ID of the job to check the status and retrieve results
	JobID string `pathParam:"style=simple,explode=false,name=jobID"`
}

func (o *GetCodeSamplePreviewAsyncRequest) GetJobID() string {
	if o == nil {
		return ""
	}
	return o.JobID
}

// GetCodeSamplePreviewAsyncResponseBody - Job is still in progress
type GetCodeSamplePreviewAsyncResponseBody struct {
	// The current status of the job. Possible values are `pending` or `running`.
	Status shared.CodeSamplesJobStatus `json:"status"`
}

func (o *GetCodeSamplePreviewAsyncResponseBody) GetStatus() shared.CodeSamplesJobStatus {
	if o == nil {
		return shared.CodeSamplesJobStatus("")
	}
	return o.Status
}

type GetCodeSamplePreviewAsyncResponse struct {
	// Successfully returned codeSample overlay file
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationJSONResponseStream io.ReadCloser
	// Successfully returned codeSample overlay file
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationXYamlResponseStream io.ReadCloser
	// Job is still in progress
	TwoHundredAndTwoApplicationJSONObject *GetCodeSamplePreviewAsyncResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetCodeSamplePreviewAsyncResponse) GetTwoHundredApplicationJSONResponseStream() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONResponseStream
}

func (o *GetCodeSamplePreviewAsyncResponse) GetTwoHundredApplicationXYamlResponseStream() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationXYamlResponseStream
}

func (o *GetCodeSamplePreviewAsyncResponse) GetTwoHundredAndTwoApplicationJSONObject() *GetCodeSamplePreviewAsyncResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndTwoApplicationJSONObject
}

func (o *GetCodeSamplePreviewAsyncResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCodeSamplePreviewAsyncResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCodeSamplePreviewAsyncResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
