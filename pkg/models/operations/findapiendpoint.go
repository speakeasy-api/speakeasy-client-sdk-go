// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/pkg/models/shared"
	"net/http"
)

type FindAPIEndpointRequest struct {
	// The ID of the Api the ApiEndpoint belongs to.
	APIID string `pathParam:"style=simple,explode=false,name=apiID"`
	// The displayName of the ApiEndpoint to find (set by operationId from OpenAPI schema).
	DisplayName string `pathParam:"style=simple,explode=false,name=displayName"`
	// The version ID of the Api the ApiEndpoint belongs to.
	VersionID string `pathParam:"style=simple,explode=false,name=versionID"`
}

func (o *FindAPIEndpointRequest) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *FindAPIEndpointRequest) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *FindAPIEndpointRequest) GetVersionID() string {
	if o == nil {
		return ""
	}
	return o.VersionID
}

type FindAPIEndpointResponse struct {
	// OK
	APIEndpoint *shared.APIEndpoint
	ContentType string
	// Default error response
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}

func (o *FindAPIEndpointResponse) GetAPIEndpoint() *shared.APIEndpoint {
	if o == nil {
		return nil
	}
	return o.APIEndpoint
}

func (o *FindAPIEndpointResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *FindAPIEndpointResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *FindAPIEndpointResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FindAPIEndpointResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
