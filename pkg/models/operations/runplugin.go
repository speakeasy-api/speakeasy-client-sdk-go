// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type RunPluginRequest struct {
	// The filter to apply to the query.
	Filters *shared.Filters `queryParam:"serialization=json,name=filters"`
	// The ID of the plugin to run.
	PluginID string `pathParam:"style=simple,explode=false,name=pluginID"`
}

func (o *RunPluginRequest) GetFilters() *shared.Filters {
	if o == nil {
		return nil
	}
	return o.Filters
}

func (o *RunPluginRequest) GetPluginID() string {
	if o == nil {
		return ""
	}
	return o.PluginID
}

type RunPluginResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Default error response
	Error *shared.Error
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Classes []shared.BoundedRequest
}

func (o *RunPluginResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RunPluginResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *RunPluginResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RunPluginResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RunPluginResponse) GetClasses() []shared.BoundedRequest {
	if o == nil {
		return nil
	}
	return o.Classes
}
