// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type CreateSubscriptionRequest struct {
	// The subscription to create
	RegistrySubscription shared.RegistrySubscription `request:"mediaType=application/json"`
	// The workspace ID
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

func (o *CreateSubscriptionRequest) GetRegistrySubscription() shared.RegistrySubscription {
	if o == nil {
		return shared.RegistrySubscription{}
	}
	return o.RegistrySubscription
}

func (o *CreateSubscriptionRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

type CreateSubscriptionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	RegistrySubscription *shared.RegistrySubscription
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateSubscriptionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateSubscriptionResponse) GetRegistrySubscription() *shared.RegistrySubscription {
	if o == nil {
		return nil
	}
	return o.RegistrySubscription
}

func (o *CreateSubscriptionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateSubscriptionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
