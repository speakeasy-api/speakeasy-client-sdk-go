// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type ListSubscriptionsRequest struct {
	// The event type
	EventType *string `queryParam:"style=form,explode=true,name=event_type"`
	// The namespace name
	NamespaceName *string `queryParam:"style=form,explode=true,name=namespace_name"`
	// The subscription type
	SubscriptionType *shared.SubscriptionType `queryParam:"style=form,explode=true,name=subscription_type"`
	// The tag
	Tag *string `queryParam:"style=form,explode=true,name=tag"`
	// The workspace ID
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

func (o *ListSubscriptionsRequest) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *ListSubscriptionsRequest) GetNamespaceName() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceName
}

func (o *ListSubscriptionsRequest) GetSubscriptionType() *shared.SubscriptionType {
	if o == nil {
		return nil
	}
	return o.SubscriptionType
}

func (o *ListSubscriptionsRequest) GetTag() *string {
	if o == nil {
		return nil
	}
	return o.Tag
}

func (o *ListSubscriptionsRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

type ListSubscriptionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Classes []shared.Subscription
}

func (o *ListSubscriptionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSubscriptionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSubscriptionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListSubscriptionsResponse) GetClasses() []shared.Subscription {
	if o == nil {
		return nil
	}
	return o.Classes
}
