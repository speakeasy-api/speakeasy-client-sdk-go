// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type SuggestOperationIDsRegistryRequest struct {
	// The schema file to upload provided as a multipart/form-data file segment.
	SuggestOperationIDsOpts *shared.SuggestOperationIDsOpts `request:"mediaType=application/json"`
	// Max number of suggestions to request
	Limit         *float64 `queryParam:"style=form,explode=true,name=limit"`
	NamespaceName string   `pathParam:"style=simple,explode=false,name=namespace_name"`
	// Tag or digest
	RevisionReference string `pathParam:"style=simple,explode=false,name=revision_reference"`
	XSessionID        string `header:"style=simple,explode=false,name=x-session-id"`
}

func (o *SuggestOperationIDsRegistryRequest) GetSuggestOperationIDsOpts() *shared.SuggestOperationIDsOpts {
	if o == nil {
		return nil
	}
	return o.SuggestOperationIDsOpts
}

func (o *SuggestOperationIDsRegistryRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SuggestOperationIDsRegistryRequest) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *SuggestOperationIDsRegistryRequest) GetRevisionReference() string {
	if o == nil {
		return ""
	}
	return o.RevisionReference
}

func (o *SuggestOperationIDsRegistryRequest) GetXSessionID() string {
	if o == nil {
		return ""
	}
	return o.XSessionID
}

type SuggestOperationIDsRegistryResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	SuggestedOperationIDs *shared.SuggestedOperationIDs
}

func (o *SuggestOperationIDsRegistryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SuggestOperationIDsRegistryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SuggestOperationIDsRegistryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *SuggestOperationIDsRegistryResponse) GetSuggestedOperationIDs() *shared.SuggestedOperationIDs {
	if o == nil {
		return nil
	}
	return o.SuggestedOperationIDs
}
