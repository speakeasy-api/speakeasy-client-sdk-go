// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"io"
	"net/http"
)

type SuggestRequest struct {
	// The OAS summary and diagnostics to use for the suggestion.
	SuggestRequestBody shared.SuggestRequestBody `request:"mediaType=application/json"`
	XSessionID         string                    `header:"style=simple,explode=false,name=x-session-id"`
}

func (o *SuggestRequest) GetSuggestRequestBody() shared.SuggestRequestBody {
	if o == nil {
		return shared.SuggestRequestBody{}
	}
	return o.SuggestRequestBody
}

func (o *SuggestRequest) GetXSessionID() string {
	if o == nil {
		return ""
	}
	return o.XSessionID
}

type SuggestResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// An overlay containing the suggested spec modifications.
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	Schema io.ReadCloser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *SuggestResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SuggestResponse) GetSchema() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.Schema
}

func (o *SuggestResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SuggestResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
