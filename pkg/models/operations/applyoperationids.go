// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/sdkerrors"
	"io"
	"net/http"
)

// ApplyOperationIDsRequestBody - Apply options
type ApplyOperationIDsRequestBody struct {
	// Whether to apply the suggestions as an overlay or replace the existing operationIDs. Default: false
	AsOverlay *bool `json:"as_overlay,omitempty"`
}

func (o *ApplyOperationIDsRequestBody) GetAsOverlay() *bool {
	if o == nil {
		return nil
	}
	return o.AsOverlay
}

type ApplyOperationIDsRequest struct {
	// Apply options
	RequestBody *ApplyOperationIDsRequestBody `request:"mediaType=application/json"`
	XSessionID  string                        `header:"style=simple,explode=false,name=x-session-id"`
}

func (o *ApplyOperationIDsRequest) GetRequestBody() *ApplyOperationIDsRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *ApplyOperationIDsRequest) GetXSessionID() string {
	if o == nil {
		return ""
	}
	return o.XSessionID
}

type ApplyOperationIDsResponse struct {
	// OK
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationJSONSchema io.ReadCloser
	// OK
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationXYamlSchema io.ReadCloser
	// HTTP response content type for this operation
	ContentType string
	// Default error response
	Error *sdkerrors.Error
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ApplyOperationIDsResponse) GetTwoHundredApplicationJSONSchema() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONSchema
}

func (o *ApplyOperationIDsResponse) GetTwoHundredApplicationXYamlSchema() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationXYamlSchema
}

func (o *ApplyOperationIDsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ApplyOperationIDsResponse) GetError() *sdkerrors.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *ApplyOperationIDsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ApplyOperationIDsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
