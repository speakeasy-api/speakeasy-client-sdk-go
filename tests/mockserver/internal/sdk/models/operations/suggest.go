// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"io"
	"mockserver/internal/sdk/models/components"
)

type SuggestRequest struct {
	// The OAS summary and diagnostics to use for the suggestion.
	SuggestRequestBody components.SuggestRequestBody `request:"mediaType=application/json"`
	XSessionID         string                        `header:"style=simple,explode=false,name=x-session-id"`
}

func (o *SuggestRequest) GetSuggestRequestBody() components.SuggestRequestBody {
	if o == nil {
		return components.SuggestRequestBody{}
	}
	return o.SuggestRequestBody
}

func (o *SuggestRequest) GetXSessionID() string {
	if o == nil {
		return ""
	}
	return o.XSessionID
}

type SuggestResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An overlay containing the suggested spec modifications.
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	Schema io.ReadCloser
}

func (o *SuggestResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SuggestResponse) GetSchema() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.Schema
}
