// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetSchemaDiffRequest struct {
	// The ID of the Api to retrieve schemas for.
	APIID string `pathParam:"style=simple,explode=false,name=apiID"`
	// The base revision ID of the schema to retrieve.
	BaseRevisionID string `pathParam:"style=simple,explode=false,name=baseRevisionID"`
	// The target revision ID of the schema to retrieve.
	TargetRevisionID string `pathParam:"style=simple,explode=false,name=targetRevisionID"`
	// The version ID of the Api to delete metadata for.
	VersionID string `pathParam:"style=simple,explode=false,name=versionID"`
}

func (o *GetSchemaDiffRequest) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *GetSchemaDiffRequest) GetBaseRevisionID() string {
	if o == nil {
		return ""
	}
	return o.BaseRevisionID
}

func (o *GetSchemaDiffRequest) GetTargetRevisionID() string {
	if o == nil {
		return ""
	}
	return o.TargetRevisionID
}

func (o *GetSchemaDiffRequest) GetVersionID() string {
	if o == nil {
		return ""
	}
	return o.VersionID
}

type GetSchemaDiffResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	SchemaDiff *components.SchemaDiff
}

func (o *GetSchemaDiffResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSchemaDiffResponse) GetSchemaDiff() *components.SchemaDiff {
	if o == nil {
		return nil
	}
	return o.SchemaDiff
}
