// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"io"
	"mockserver/internal/sdk/models/components"
)

type File struct {
	Content  io.Reader `multipartForm:"content"`
	FileName string    `multipartForm:"name=file"`
}

func (o *File) GetContent() io.Reader {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *File) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

// UploadReportRequestBody - The report file to upload provided as a multipart/form-data file segment.
type UploadReportRequestBody struct {
	Data components.Report `multipartForm:"name=data,json"`
	File File              `multipartForm:"file"`
}

func (o *UploadReportRequestBody) GetData() components.Report {
	if o == nil {
		return components.Report{}
	}
	return o.Data
}

func (o *UploadReportRequestBody) GetFile() File {
	if o == nil {
		return File{}
	}
	return o.File
}

// UploadReportUploadedReport - OK
type UploadReportUploadedReport struct {
	URL string `json:"url"`
}

func (o *UploadReportUploadedReport) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type UploadReportResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	UploadedReport *UploadReportUploadedReport
}

func (o *UploadReportResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UploadReportResponse) GetUploadedReport() *UploadReportUploadedReport {
	if o == nil {
		return nil
	}
	return o.UploadedReport
}
