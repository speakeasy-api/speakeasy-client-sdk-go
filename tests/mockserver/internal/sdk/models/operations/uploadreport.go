// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"io"
	"mockserver/internal/sdk/models/components"
)

type File struct {
	FileName string    `multipartForm:"name=fileName"`
	Content  io.Reader `multipartForm:"content"`
}

func (o *File) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *File) GetContent() io.Reader {
	if o == nil {
		return nil
	}
	return o.Content
}

// UploadReportRequest - The report file to upload provided as a multipart/form-data file segment.
type UploadReportRequest struct {
	Data components.Report `multipartForm:"name=data,json"`
	File File              `multipartForm:"file"`
}

func (o *UploadReportRequest) GetData() components.Report {
	if o == nil {
		return components.Report{}
	}
	return o.Data
}

func (o *UploadReportRequest) GetFile() File {
	if o == nil {
		return File{}
	}
	return o.File
}

// UploadedReport - OK
type UploadedReport struct {
	URL string `json:"url"`
}

func (o *UploadedReport) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type UploadReportResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	UploadedReport *UploadedReport
}

func (o *UploadReportResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UploadReportResponse) GetUploadedReport() *UploadedReport {
	if o == nil {
		return nil
	}
	return o.UploadedReport
}
