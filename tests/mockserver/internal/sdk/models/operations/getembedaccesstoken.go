// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetEmbedAccessTokenRequest struct {
	// The description of the embed access token.
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// The duration (in minutes) of the embed access token.
	Duration *int64 `queryParam:"style=form,explode=true,name=duration"`
	// The filter to apply to the query.
	Filters *components.Filters `queryParam:"serialization=json,name=filters"`
}

func (o *GetEmbedAccessTokenRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetEmbedAccessTokenRequest) GetDuration() *int64 {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *GetEmbedAccessTokenRequest) GetFilters() *components.Filters {
	if o == nil {
		return nil
	}
	return o.Filters
}

type GetEmbedAccessTokenResponse struct {
	// OK
	EmbedAccessTokenResponse *components.EmbedAccessTokenResponse
	HTTPMeta                 components.HTTPMetadata `json:"-"`
}

func (o *GetEmbedAccessTokenResponse) GetEmbedAccessTokenResponse() *components.EmbedAccessTokenResponse {
	if o == nil {
		return nil
	}
	return o.EmbedAccessTokenResponse
}

func (o *GetEmbedAccessTokenResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
