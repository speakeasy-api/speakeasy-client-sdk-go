// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

// ArchiveNamespaceRequestBody - Archived status
type ArchiveNamespaceRequestBody struct {
	Archived *bool `default:"true" json:"archived"`
}

func (a ArchiveNamespaceRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ArchiveNamespaceRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ArchiveNamespaceRequestBody) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

type ArchiveNamespaceRequest struct {
	NamespaceName string `pathParam:"style=simple,explode=false,name=namespace_name"`
	// Archived status
	RequestBody *ArchiveNamespaceRequestBody `request:"mediaType=application/json"`
}

func (o *ArchiveNamespaceRequest) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *ArchiveNamespaceRequest) GetRequestBody() *ArchiveNamespaceRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type ArchiveNamespaceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *ArchiveNamespaceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
