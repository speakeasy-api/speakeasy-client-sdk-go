// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// GenerateCodeSamplePreviewAsyncResponseBody - Job accepted, returns a job ID to poll for status and result
type GenerateCodeSamplePreviewAsyncResponseBody struct {
	// The job ID for polling
	JobID string `json:"job_id"`
	// The current status of the job. Possible values are `pending` or `running`.
	Status components.CodeSamplesJobStatus `json:"status"`
}

func (o *GenerateCodeSamplePreviewAsyncResponseBody) GetJobID() string {
	if o == nil {
		return ""
	}
	return o.JobID
}

func (o *GenerateCodeSamplePreviewAsyncResponseBody) GetStatus() components.CodeSamplesJobStatus {
	if o == nil {
		return components.CodeSamplesJobStatus("")
	}
	return o.Status
}

type GenerateCodeSamplePreviewAsyncResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Job accepted, returns a job ID to poll for status and result
	Object *GenerateCodeSamplePreviewAsyncResponseBody
}

func (o *GenerateCodeSamplePreviewAsyncResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GenerateCodeSamplePreviewAsyncResponse) GetObject() *GenerateCodeSamplePreviewAsyncResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
