// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// Op - Configuration for filter operations
type Op struct {
	// Whether to AND or OR the filters
	And bool `queryParam:"name=and"`
}

func (o *Op) GetAnd() bool {
	if o == nil {
		return false
	}
	return o.And
}

type GetAllAPIVersionsRequest struct {
	// The ID of the Api to retrieve.
	APIID string `pathParam:"style=simple,explode=false,name=apiID"`
	// Metadata to filter Apis on
	Metadata map[string][]string `queryParam:"style=deepObject,explode=true,name=metadata"`
	// Configuration for filter operations
	Op *Op `queryParam:"style=deepObject,explode=true,name=op"`
}

func (o *GetAllAPIVersionsRequest) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *GetAllAPIVersionsRequest) GetMetadata() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *GetAllAPIVersionsRequest) GetOp() *Op {
	if o == nil {
		return nil
	}
	return o.Op
}

type GetAllAPIVersionsResponse struct {
	// OK
	Apis     []components.API
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *GetAllAPIVersionsResponse) GetApis() []components.API {
	if o == nil {
		return nil
	}
	return o.Apis
}

func (o *GetAllAPIVersionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
