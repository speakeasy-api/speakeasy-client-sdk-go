// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type User struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Email address of the user.
	Email string `json:"email"`
	// Indicates whether the email address has been verified.
	EmailVerified bool `json:"email_verified"`
	// GitHub handle of the user.
	GithubHandle *string `json:"github_handle,omitempty"`
	// Display name of the user.
	DisplayName string `json:"display_name"`
	// URL of the user's photo.
	PhotoURL *string `json:"photo_url,omitempty"`
	// Identifier of the default workspace.
	DefaultWorkspaceID *string `json:"default_workspace_id,omitempty"`
	// Indicates whether the user has been confirmed.
	Confirmed bool `json:"confirmed"`
	// Indicates whether the user has been whitelisted.
	Whitelisted bool `json:"whitelisted"`
	// Timestamp of the last login.
	LastLoginAt *time.Time `json:"last_login_at,omitempty"`
	// Indicates whether the user is an admin.
	Admin bool `json:"admin"`
	// Timestamp of the user's creation.
	CreatedAt time.Time `json:"created_at"`
	// Timestamp of the user's last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Indicates whether the user is internal.
	Internal *bool `json:"internal,omitempty"`
	// Hash used for pylon identity verification returned on v1/user.
	PylonIdentityHash *string `json:"pylon_identity_hash,omitempty"`
	// Indicates whether the user has created an API key. Not always populated
	HasCreatedAPIKey *bool `json:"has_created_api_key,omitempty"`
}

func (u User) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *User) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *User) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *User) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *User) GetEmailVerified() bool {
	if o == nil {
		return false
	}
	return o.EmailVerified
}

func (o *User) GetGithubHandle() *string {
	if o == nil {
		return nil
	}
	return o.GithubHandle
}

func (o *User) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *User) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *User) GetDefaultWorkspaceID() *string {
	if o == nil {
		return nil
	}
	return o.DefaultWorkspaceID
}

func (o *User) GetConfirmed() bool {
	if o == nil {
		return false
	}
	return o.Confirmed
}

func (o *User) GetWhitelisted() bool {
	if o == nil {
		return false
	}
	return o.Whitelisted
}

func (o *User) GetLastLoginAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastLoginAt
}

func (o *User) GetAdmin() bool {
	if o == nil {
		return false
	}
	return o.Admin
}

func (o *User) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *User) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *User) GetInternal() *bool {
	if o == nil {
		return nil
	}
	return o.Internal
}

func (o *User) GetPylonIdentityHash() *string {
	if o == nil {
		return nil
	}
	return o.PylonIdentityHash
}

func (o *User) GetHasCreatedAPIKey() *bool {
	if o == nil {
		return nil
	}
	return o.HasCreatedAPIKey
}
