// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type SuggestOptsOldSuggestionType string

const (
	SuggestOptsOldSuggestionTypeMethodNames     SuggestOptsOldSuggestionType = "method-names"
	SuggestOptsOldSuggestionTypeDiagnosticsOnly SuggestOptsOldSuggestionType = "diagnostics-only"
)

func (e SuggestOptsOldSuggestionType) ToPointer() *SuggestOptsOldSuggestionType {
	return &e
}
func (e *SuggestOptsOldSuggestionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "method-names":
		fallthrough
	case "diagnostics-only":
		*e = SuggestOptsOldSuggestionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SuggestOptsOldSuggestionType: %v", v)
	}
}

type SuggestOptsOld struct {
	SuggestionType SuggestOptsOldSuggestionType `json:"suggestion_type"`
	Diagnostics    []Diagnostic                 `json:"diagnostics,omitempty"`
}

func (o *SuggestOptsOld) GetSuggestionType() SuggestOptsOldSuggestionType {
	if o == nil {
		return SuggestOptsOldSuggestionType("")
	}
	return o.SuggestionType
}

func (o *SuggestOptsOld) GetDiagnostics() []Diagnostic {
	if o == nil {
		return nil
	}
	return o.Diagnostics
}
