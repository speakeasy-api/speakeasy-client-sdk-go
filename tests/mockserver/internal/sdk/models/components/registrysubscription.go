// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// RegistrySubscription - A subscription to a registry event
type RegistrySubscription struct {
	CreatedAt            time.Time        `json:"created_at"`
	DeletedAt            *time.Time       `json:"deleted_at,omitempty"`
	EventType            EventType        `json:"event_type"`
	ID                   string           `json:"id"`
	NamespaceName        string           `json:"namespace_name"`
	SubscriptionSettings string           `json:"subscription_settings"`
	SubscriptionType     SubscriptionType `json:"subscription_type"`
	Tags                 []string         `json:"tags,omitempty"`
	UpdatedAt            time.Time        `json:"updated_at"`
	WorkspaceID          string           `json:"workspace_id"`
}

func (r RegistrySubscription) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RegistrySubscription) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RegistrySubscription) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *RegistrySubscription) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *RegistrySubscription) GetEventType() EventType {
	if o == nil {
		return EventType("")
	}
	return o.EventType
}

func (o *RegistrySubscription) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RegistrySubscription) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *RegistrySubscription) GetSubscriptionSettings() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionSettings
}

func (o *RegistrySubscription) GetSubscriptionType() SubscriptionType {
	if o == nil {
		return SubscriptionType("")
	}
	return o.SubscriptionType
}

func (o *RegistrySubscription) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *RegistrySubscription) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *RegistrySubscription) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
