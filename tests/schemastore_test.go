// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	speakeasyclientsdkgo "github.com/speakeasy-api/speakeasy-client-sdk-go/v3"
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/operations"
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/types"
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/utils"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestSchemastore_CreateSchemaStoreItem(t *testing.T) {
	ctx := context.Background()

	testHTTPClient := createTestHTTPClient("createSchemaStoreItem")

	s := speakeasyclientsdkgo.New(
		speakeasyclientsdkgo.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")),
		speakeasyclientsdkgo.WithClient(testHTTPClient),
		speakeasyclientsdkgo.WithSecurity(shared.Security{
			APIKey: speakeasyclientsdkgo.String("<YOUR_API_KEY_HERE>"),
		}),
	)

	res, err := s.SchemaStore.CreateSchemaStoreItem(ctx, operations.CreateSchemaStoreItemRequestBody{
		Format:       operations.FormatYaml,
		PackageName:  "<value>",
		SDKClassname: "<value>",
		Spec:         "<value>",
	})
	require.NoError(t, err)
	assert.Equal(t, 200, res.StatusCode)

}

func TestSchemastore_GetSchemaStoreItem(t *testing.T) {
	ctx := context.Background()

	testHTTPClient := createTestHTTPClient("getSchemaStoreItem")

	s := speakeasyclientsdkgo.New(
		speakeasyclientsdkgo.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")),
		speakeasyclientsdkgo.WithClient(testHTTPClient),
		speakeasyclientsdkgo.WithSecurity(shared.Security{
			APIKey: speakeasyclientsdkgo.String("<YOUR_API_KEY_HERE>"),
		}),
	)

	res, err := s.SchemaStore.GetSchemaStoreItem(ctx, nil)
	require.NoError(t, err)
	assert.Contains(t, []any{200, 201, 202, 203, 204, 205, 206, 207, 208, 226}, res.StatusCode)
	assert.NotNil(t, res.SchemaStoreItem)
	assert.Equal(t, &shared.SchemaStoreItem{
		CreatedAt:    types.MustTimeFromString("2023-02-14T01:44:55.437Z"),
		Format:       shared.FormatYaml,
		ID:           "<id>",
		PackageName:  "<value>",
		SDKClassname: "<value>",
		Spec:         "<value>",
	}, res.SchemaStoreItem)

}
